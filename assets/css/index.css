/*

This is a development CSS file that is compiled to a minified
production stylesheet in assets/built/screen.css using: npm run dev

*/

/* Lib - Local component imports
/* ---------------------------------------------------------- */

/* Base components */
/* @import "vars.css";
@import "components/global.css";
@import "components/forms.css";
@import "components/buttons.css"; */

/* Ghost components */
/* @import "ghost/header.css";
@import "ghost/content.css";
@import "ghost/readmore.css";
@import "ghost/members.css";
@import "ghost/errors.css";
@import "ghost/footer.css";
@import "ghost/badge.css";
@import "ghost/pagination.css";
@import "ghost/comments.css"; */

/* Tailwind - add this part */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Main - Your styles here! Edit below
/* ---------------------------------------------------------- */

/* html,
.gh-viewport {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    background: red;
}

.gh-main {
    flex: 1 0 auto;
    display: flex;
    flex-direction: column;
}

.gh-page {
    padding: 0 4vmin;
}

.gh-article {
    padding: 8vmin 0;
}

.gh-postfeed {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(min(350px, 100%), 1fr));
    gap: 4.8vmin 4vmin;
    padding: 8vmin 0;
}

.gh-postfeed>*:first-child {
    grid-column: 1 / -1;
}

.gh-container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
}

.gh-head-actions a:not(.gh-button) {
    display: inline-flex;
    align-items: center;
    margin: 0;
    padding: 10px;
}

.gh-head-actions a svg {
    height: 1.8rem;
    fill: currentcolor;
}

.gh-head-actions a:first-child svg {
    margin-left: 20px;
}

.gh-head-actions a:last-child svg {
    height: 2rem;
} */

/* Index
/* ---------------------------------------------------------- */

/* .gh-card:not(:first-child) {
    margin: 8vmin auto 0;
} */

/* .gh-card-link {
    display: flex;
    flex-direction: column;
}

.gh-card-image {
    width: 100%;
   
    object-fit: cover;
    margin-bottom: 4vmin;
    aspect-ratio: 1 / 1;
}

.gh-card-image:first-of-type {
    aspect-ratio: 16 / 9;
}


.gh-card-meta {
    display: block;
    margin: 0 0 1rem;
    font-size: 1.4rem;
    line-height: 1.2em;
    letter-spacing: 0.5px;
    text-transform: uppercase;
    opacity: 0.8;
}

.gh-card-content {
    max-width: 720px;
    margin: 0 auto;
    text-align: center;
    font-size: 1.6rem;
}

.gh-card-content p {
    margin: 1.2rem 0;
    padding: 0 3vmin;
}

.gh-card-content>strong {
    display: inline-block;
    padding: 1px 0;
    font-weight: 500;
    box-shadow: 0 -1px 0 0 inset currentColor;
    opacity: 0.75;
} */


/* Page
/* ---------------------------------------------------------- */

/* .gh-page-head {
    margin: 0 auto;
    padding: 8vmin 0 4vmin;
    text-align: center;
}

.gh-page-image {
    margin: 4vmin 0 0 0;
}

.gh-page-head>p {
    max-width: 720px;
    margin: 0.3em auto 0;
    padding: 0 6vmin;
    font-size: 1.3em;
    line-height: 1.4em;
    opacity: 0.5;
}

@media (max-width: 700px) {
    .gh-page-head>p {
        font-size: 1.6rem;
    } 
}*/


/* Post
/* ---------------------------------------------------------- */

/* .gh-header {
    padding: 0 0 8vmin 0;
    text-align: center;
}

.gh-post-meta {
    display: block;
    margin: 0 0 1rem;
    font-size: 1.4rem;
    letter-spacing: 0.5px;
    text-transform: uppercase;
    opacity: 0.8;
}

.gh-excerpt {
    margin: 1rem 0 0 0;
}

.gh-feature-image {
    grid-column: wide-start / wide-end;
    width: 100%;
    margin: 8vmin 0 0;
}

.gh-feature-image img {
    margin-inline: auto;
}

.gh-post-footer {
    margin: 2rem 0;
} */


/* Author Archive
/* ---------------------------------------------------------- */
/*
.gh-author-image {
    height: 12vmin;
    width: 12vmin;
    margin: 0 auto 1.5em;
    border-radius: 100%;
    overflow: hidden;
    object-fit: cover;
}

.gh-author-meta {
    margin: 2vmin 0 0 0;
    font-size: 1.2em;
}

.gh-author-links {
    display: flex;
    align-items: center;
    justify-content: center;
}

.gh-author-links a {
    position: relative;
    display: inline-flex;
    align-items: center;
    margin: 0 0.75vmin;
}

.gh-author-links a+a:before {
    display: block;
    content: "";
    margin: 0 1.25vmin 0 0;
    height: 1em;
    width: 1px;
    background: rgba(0, 0, 0, 0.3);
    transform: rotate(20deg);
}

@media (max-width: 700px) {
    .gh-author-meta {
        font-size: 1.6rem;
    }
}
*/

:root {
    --color-blue-10: #1E4AC1;
    --color-blue-20:  #225BFB;

    --color-grey-10:  #9098A1;
 
  
    /* ... */
  }


  body, html{
    margin: 0;
    padding: 0;
    width:100%;
    overflow-x: hidden;
  
  }

.outline {
    background-color: aqua;
}
.outline > div{
    outline: 4px solid red;
}

.kg-card.kg-button-card a.kg-btn {
    background-color: blue;
    @apply rounded-full;
 }
  

 ._deco_blue_bars {
    border-bottom-width: 56px;
    border-color: var(--color-blue-10);
    @apply relative;
 
 }
 ._deco_blue_bars::after {
    content: " ";
    @apply absolute;
    @apply left-0;
    @apply right-0;
    @apply -bottom-7; 
    @apply h-5; 
    @apply bg-blue-20; 
   
   
 }


 .select {
    color: #24272B;
    font-weight: 400;
    background-image: url('/assets/icon_dropdown.svg'), url('/assets/bg_scrollIndicator.png');
    background-size: 15px 7px, 0px 120% ;
    background-position: 12px 50% , 0 50%;
    @apply bg-neutral;
    animation: scrollProgressBar 1s linear;
 }
 @keyframes scrollProgressBar {
    to {
        background-size: 15px 7px, 100% 120% ;
    }
  }

  :root select {
    /* Pause the animation */
    animation-play-state: paused;
    /* Bind the animation to scroll */
    animation-delay: calc(var(--scroll) * -1s);
    /* These last 2 properites clean up overshoot weirdness */
    animation-iteration-count: 1;
    animation-fill-mode: both;
  }
